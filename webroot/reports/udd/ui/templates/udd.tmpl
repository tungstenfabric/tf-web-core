<!-- Copyright (c) 2014 Juniper Networks, Inc. All rights reserved. -->

<script type="text/x-handlebars-template" id="udd-layout-template">
    <div class="area">
        <div class="grid-stack grid-stack-{{ width }}"></div>
    </div>
</script>

<script type="text/x-handlebars-template" id="udd-layout-placeholder-template">
    <a class="add-widget col-xs-6" title="Add new widget">+</a>
</script>

<script type="text/x-handlebars-template" id="udd-widget-template">
    <div id="{{ id }}" class="widget drag-to-drop" data-bind="attr: {'data-gs-x': x, 'data-gs-y': y, 'data-gs-width': width, 'data-gs-height': height}">
        <div class="panel panel-default">
            <div class="panel-heading" title="Drag widget with header">
                <div class="widget-control">
                    <button type="button" class="ctrl-btn clone" title="Clone widget" data-bind="visible: isReady() && step() === steps.SHOW_VISUALIZATION">
                        <span class="fa fa-clone"></span>
                    </button>
                    <button type="button" class="ctrl-btn refresh" title="Reload data" data-bind="visible: isReady() && step() === steps.SHOW_VISUALIZATION">
                        <span class="fa fa-repeat"></span>
                    </button>
                    <button type="button" class="ctrl-btn remove" title="Remove widget">
                        <span class="fa fa-trash"></span>
                    </button>
                    <button type="button" class="ctrl-btn config" title="Discard changes" data-bind="visible: isReady">
                        <span class="fa fa-times" data-bind="css: {'fa-gear': step() === steps.SHOW_VISUALIZATION, 'fa-times': step() !== steps.SHOW_VISUALIZATION}"></span>
                    </button>
                </div>
                <div class="title-group">
                    <span class="config-title" data-bind="visible: step() !== steps.SHOW_VISUALIZATION"></span>
                    <div class="title" title="Click to edit title" data-bind="html:title, visible: !editingTitle()"></div>
                    <input class="edit-title" type="text" data-bind="value:title, visible: editingTitle, hasFocus: editingTitle" />
                </div>
            </div>
            <div class="panel-body">
                <div id="{{ id }}-config-selectors" class="config-selectors"></div>
                <!-- adding this visibility control wrapper is a work around to avoid ko binding conflict that happens on same element
                this conflict is introduced by how the current infrastructure uses ko VM for a view (e.g. when a view gets rendered, the view's model tries to apply ko VM to the element) -->
                <div class="visibility-control-wrapper" data-bind="visible: step() === steps.DATA_CONFIG">
                    <div id="{{ id }}-dataConfigView" class="data-config step"></div>
                </div>
                <div class="visibility-control-wrapper" data-bind="visible: step() === steps.VISUAL_META_CONFIG">
                    <div id="{{ id }}-contentConfigView" class="content-config step"></div>
                </div>
                <div class="visibility-control-wrapper" data-bind="visible: step() === steps.SHOW_VISUALIZATION">
                    <div id="{{ id }}-contentView" class="content-view step"></div>
                </div>
            </div>
            <div class="panel-footer" data-bind="visible: step() !== steps.SHOW_VISUALIZATION"></div>
        </div>
    </div>
</script>
